{"noir_version":"0.39.0+9ae9ef8347ddc608659563050edb6752f5dfb87d","hash":15645664445429207668,"abi":{"parameters":[{"name":"x","type":{"kind":"integer","sign":"unsigned","width":64},"visibility":"private"}],"return_type":{"abi_type":{"kind":"integer","sign":"unsigned","width":64},"visibility":"public"},"error_types":{"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"},"7233212735005103307":{"error_kind":"string","string":"attempt to multiply with overflow"}}},"bytecode":"H4sIAAAAAAAA/9VZS07DMBB1PiVt2tJCWyhrJNZ2Pq2zgwUHaZRkzy04AHeAk7CABZfgICTBllw3jYTyjJonRU7ieDTz5s04Sizyi7vyuBXnVnk4YqxwT/Zha/dpF2xZqtoK6SaK8m2Qs5DtaJCkPKZRnG444yzmcRbwMMx5xLdJmmxpwqIwZ0WchIUwZ6P8KqHyYJvmgVJmA3lwQH4FMctVHhzDPARloEg9uMSMHlxiXg8ukIcByC+u8TAg/aqLM5Bf2S4rVB6kXVfjQIXeT7vG0oFjppzH0pYOgO0aKheeGIeSEEmgJ0b13pAcissxSOIfbVHNFvOAfg2Bye2hKANO/0+UIzH6khApwBE5FKVP+iXKEdAvH5xctPg8kTP0DoTkcIzza69AwDFHyGY2AdjKixp5k25oNzCpG3QdIzlEanAK5M5EPqpYpwTfH84JtvbQ/lW9YXLitTzD1XJhgkOpHfQeMAX6ODesQ9oNdT+cG8jNBelH/aHtXp943FVfnBmwuyZm3nVcrN6h/fESWIdA3bA1MEY1F2jNLHAxb0z6uQT5WW6DiXzvHIix4sAR19WXpWVLHLQbWNWTK826IH7E3p4ha2pFzPTiE+pvUdPHGWCeqSn9rHrg45UBH2ugXzItoDiRQctfHmpyVFjKOGjg5/Pl6/3teZepa6S91ffDzdPH66M6d9aybtiyzj8yZ2lrR9rz+q8t2g2BtD82Y5965BC+cj7W5mQe3IZ11pFrWxvbnm3TxLRhTtpciFH1V8bxA76TTjubHgAA","debug_symbols":"tdbJioQwEAbgd8nZQ/bFVxmGxiU2AVFxGRik3721MWLHY1HHSv1+h2iZrKT25fJ8hK7pJ5L/rKTtq2IOfbdVK2GfpWkour2a5mKcSS5ERnxXk1zRV0aa0HqSa/fK7kEjj6Sw/Br9zQhHkwVIlsoeSbn3v2SJJiuQrNSZ1OluaDTZAGUek4YlskWTHUjWkh5JrdLdYBSPhk2hY/G7c4KmNMejBR4t8WjYJDqtI21sSms82uDRFo+GTaNzJtIupTnFo2HTyCiLRxejXKc4B+JSnbi84QITl0Bc8xM3MsUVEHfixN0N15i4wcQtJg6bTra90Ygznv5mBcXEGSbOMXGBhm9FOYa2Dc/H9Ya/Lf8VYyjK1h9ls3TVpTv/D7ETnx/GvvL1Mvpd+vQ2/g0=","file_map":{"69":{"source":"fn main(x: u64) -> pub u64 {\n    approx_sigmoid(x)\n}\n\nfn approx_sigmoid(x: u64) -> u64 {\n    // Follows https://github.com/data61/MP-SPDZ/blob/master/Compiler/ml.py#L110\n    // [-5, -2.5, 2.5, 5]\n    let cuts: [u64; 4] = [\n        327680, // -5/2^-16, -327680\n        163840, // -2.5/2^-16, -163840\n        163840, // 163840\n        327680, // 327680\n    ];\n\n    let temp = 1819 * x;\n    let outputs = [\n        6, // 0.0001, 0.0001 / 2^-16 = 6.5536\n        temp + 9502, //0.02776 and 0.145, 0.02776 / 2^-16 = 1819.27936, 0.145/2^-16 = 9502.72\n        (11141 * x) + 32768, //0.17 and 0.5, 0.17 / 2^-16 = 11141.12, 0.5/2^-16 = 32768\n        temp + 56031, //0.02776 and 0.85498, 0.85498/2^-16 = 56031.96928\n        65529, //0.9999 / 2^-16 = 65529.4464\n    ];\n\n    let mut index = 4; // Default to the last index in case x is above all cuts\n    // Determine the correct interval index by checking against each cut\n    if x <= cuts[0] {\n        index = 0;\n    } else if x <= cuts[1] {\n        index = 1;\n    } else if x <= cuts[2] {\n        index = 2;\n    } else if x <= cuts[3] {\n        index = 3;\n    }\n    outputs[index]\n}\n","path":"/home/fabsits/co-snarks/test_vectors/noir/brillig_exploration/approx_sigmoid/src/main.nr"}},"names":["main"],"brillig_names":["directive_integer_quotient"]}