{"noir_version":"1.0.0-beta.0+7311d8ca566c3b3e0744389fc5e4163741927767","hash":2069372601977188569,"abi":{"parameters":[{"name":"x","type":{"kind":"integer","sign":"unsigned","width":64},"visibility":"private"}],"return_type":{"abi_type":{"kind":"integer","sign":"unsigned","width":64},"visibility":"public"},"error_types":{"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"},"7233212735005103307":{"error_kind":"string","string":"attempt to multiply with overflow"}}},"bytecode":"H4sIAAAAAAAA/+1ZS07DMBB1Pm2a9ENpqVQWSBzBzqd1drDgIK2a7LkFB+AOcBIWsOASHIQEYsk4baQqb6pGYqRo0jh+nXnvxY4Ui/3GTXHcVudWcThVLuOO/Q3buM7bxFpsdayIr+I4W4eZiMSGh+lWJjxOtisppEhksgtlFGUylut0m655KuIoE3mSRnkFZ6PqKkLnwabmgXNhA3lwQHWFich0HhxiHsKiUaQfXEbjB5fR+8EF8tAD1SUNHnqsW89FH1TXbrPLdR4UrmtwoIe5nrbtpQXHQjtPFJYZAOyf0LnwqjxQhCgCvSrr1wasbi6HkMQjsbiBJTxgXQOguB00ZSj56UzpVzlQhCgD+qxuyoB1y5Q+sK4ALK7VTtTaf3iVZmg9kA82Uo8hkLt9eiB6LWtEvxEMgTWOcHWReXpEoM0Y3LcKtNZ9YM8TAFaW5yWcpNBaPS9orS8YrccRXpwQeKcHrHFK7B3EHuUTcIjcry474kM07tWZ912uD1MC3AWj2WNcsMcdYM8zYF1A34gFO+/1q1wbZgS4yxN5sG2d8w74hrcLscR5MKPwYLmHzhl+fbH+tT1qfbE0DZTGelha7mnX1bvPx/Pn2+vTZqfPUXiLr/vrx/eXB32s3zBv0DAvODBmGXN9437zSwpvF6HCH9Lgc4/VI9DOh8aY0sHdM8868Ns2ctO9TZ4Y7xlTmPMq6/WqPr4B8sEPMAodAAA=","debug_symbols":"tdbLaoQwFAbgd8nahebmia9SyuAlDgFRiVooMu9eHUyx6TL8y5P8fovgycnOOttsz4cb+2lh1cfOhqmtVzeNR7Wz4r20zPV4Vsta+5VVQmTMjh2rVP7KWO8GyypNr+x/sJRXUhC/Rz8zxmGySJKloisptYlkCZNVkqzUb1LHp6Fhcpko85Asi0gmmGySZC3zK6lVfBpFjqPTupBE+O/ob/SkOY4WOFri6LROJNKBNhTTGkeXOJpwdFo3GhFmgJE6ni5p3WgoXCHGyJguYI3OOY4WsDuVSxytYBOXaxxd4mjC0QZGixxEH0Xj3TC45+P+bD2Wv2rv6mawV9lvY3vbXb/nsBO+n/3U2m7z9pTeewf/Aw==","file_map":{"68":{"source":"fn main(x: u64) -> pub u64 {\n    approx_sigmoid(x)\n}\n\nfn approx_sigmoid(x: u64) -> u64 {\n    // Follows https://github.com/data61/MP-SPDZ/blob/master/Compiler/ml.py#L110\n    // [-5, -2.5, 2.5, 5]\n    let cuts: [u64; 4] = [\n        327680, // -5/2^-16, -327680\n        163840, // -2.5/2^-16, -163840\n        163840, // 163840\n        327680, // 327680\n    ];\n\n    let temp = 1819 * x;\n    let outputs = [\n        6, // 0.0001, 0.0001 / 2^-16 = 6.5536\n        temp + 9502, //0.02776 and 0.145, 0.02776 / 2^-16 = 1819.27936, 0.145/2^-16 = 9502.72\n        (11141 * x) + 32768, //0.17 and 0.5, 0.17 / 2^-16 = 11141.12, 0.5/2^-16 = 32768\n        temp + 56031, //0.02776 and 0.85498, 0.85498/2^-16 = 56031.96928\n        65529, //0.9999 / 2^-16 = 65529.4464\n    ];\n\n    // Determine the correct interval index by checking against each cut\n    if x <= cuts[0] {\n        outputs[0]\n    } else if x <= cuts[1] {\n        outputs[1]\n    } else if x <= cuts[2] {\n        outputs[2]\n    } else if x <= cuts[3] {\n        outputs[3]\n    } else {\n        outputs[4]\n    }\n}\n","path":"/home/rwalch/Work/Taceo/product_dev/collaborative-circom/co-noir/co-noir/examples/test_vectors/approx_sigmoid/src/main.nr"}},"names":["main"],"brillig_names":["directive_integer_quotient"]}