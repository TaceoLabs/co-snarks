mod circom_reduction;
pub mod circuit;

#[cfg(test)]
mod tests {
    use ark_bls12_381::Bls12_381;
    use ark_bn254::Bn254;
    use ark_ec::{bn::Bn, pairing::Pairing};
    use ark_ff::UniformRand;
    use ark_groth16::{prepare_verifying_key, Groth16};
    use circom_types::{
        groth16::{proof::JsonProof, witness::Witness, zkey::ZKey},
        r1cs::R1CS,
    };
    use hex_literal::hex;
    use rand::thread_rng;
    use std::{fs, io::Cursor, path::Path};

    use crate::{circom_reduction::CircomReduction, circuit::Circuit};

    #[test]
    fn create_proof_and_verify_bn254() {
        let mut witness_bytes = Cursor::new(hex!("77746e73020000000200000001000000280000000000000020000000010000f093f5e1439170b97948e833285d588181b64550b829a031e1724e6430040000000200000080000000000000000100000000000000000000000000000000000000000000000000000000000000210000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000b00000000000000000000000000000000000000000000000000000000000000"));
        let mut zkey_bytes = Cursor::new(hex!("7a6b6579010000000a000000010000000400000000000000010000000200000094020000000000002000000047fd7cd8168c203c8dca7168916a81975d588181b64550b829a031e1724e643020000000010000f093f5e1439170b97948e833285d588181b64550b829a031e1724e643004000000010000000400000073d28cba1705727b300c4d4f26b7d77b71c1b109c303f566ee57eadabd6c8313f588a3f993020cc302fc175234fddab40d21651861ae718eccf741fa05176000d04a4f69a9f8bad681ce0acbe902b1f02e14a878ebb7bc908a38ee6f18939308a6c2ad63161ac72c6cc5c85e203a2abf11d61a10efbc34aef4602f22abb5b01b42f07aa08bb3808c929049045f73ed151ea66719b6bfa69c1513ae79087b1b2c69dc0d9c5613c4b69113b4272f3d0faa3c28b56f165e77b1e86c5733681ddf2a7986f829092e149fb023795de98714347245f2378004bedcf3d8431cf747fd2f71aaa81d47be705f008d0f4c0daa9a15057f2f763118773b5dced0950638d8122620bc02d1b5838e72017b493519ebdcdf1a81974726b8fb3b5096af4138571940614ca87d73b4afc4d802585add4360862fa052fc50e9096b7bea3a83f0fe14f6e96b889dfa9d61789b9ef597d27ffefe7d1b23621a9eff06429eaeeb7efd28ee5618c7565b0964bb3c7d3222f957dc76103533be35f9558264fd93e6a0a40da36f7a3fcaa31639fa1de4e9340a728b606ea769b89403399127030df1a036216267c0c710c65477c42f56e98f68002f795bf7cb3c30bfee7f81049dc7d9581a8b47c02966db6e8dd919cf5621e05ba837d74b70a04dbee16b1965275a368a163b9594c507975fa54f69735161cef3233412da21b07411ee18371c45f64c76223ca9402b2396a4ed245a18cd6c1902d45f9b248c785d0c37ec726c85254cab0bbe68bd5b0219638e3b0a2060a2b4e6c577a4126d9942951cdf38e4e827ad4b1b03000000800000000000000016099153f2fd411668c740ad20fec7945d0469594689b902ba7383d092a95006ac52855e3b00774d0acf93ddc5b5738a5637d1714473992acc1e1906e205152a8d0a6a7d9511bd4f4ccf8e2662f8f78780ccfafefe8b05369b6c10836ec599235ed8db8d3ac77b1ed3e26dcb77626be0a2dc3c76b2e2278bd4b155aefddf591d04000000b400000000000000040000000000000000000000020000005a92de414e0f2928ae165d9696ad35d4d7d7c52d79c2062c845be361c17d4d2e010000000000000003000000a76d21ae45e6b81be3595ce3b13afe538580bb533d83498ca5444e7fb1d01602000000000100000000000000a76d21ae45e6b81be3595ce3b13afe538580bb533d83498ca5444e7fb1d01602000000000200000001000000a76d21ae45e6b81be3595ce3b13afe538580bb533d83498ca5444e7fb1d016020500000000010000000000008cf61e3a4aa13425775d5ff08202404060925a652bc93e9a7fc5a7593730be2d712cc7faad322531c590fee8cd90afd05dd28ddd00a7f33b77fdee221dffa317558150d964f094187748565ee4dd8929efec7ff8468ca8defa02476c731d1e2d03347af66d3e0cf5d4ff5c2444302c43330d87881fc9474b3cd4b7f8f86a881a01338ecb9fd282ef5b90ff41e0173348272412e4fb403d2dd5e0dee71f790b1df4ba4803e6aa4fb0d4051225f55c17df12a8ee32172348d17ccbc93459d7ebecb9fd282ef5b90ff41e0173348272412e4fb403d2dd5e0dee71f790b1d534234d530e1d08bb8c45f439c0d6ab84ab0924e9f2208e7acd467acc98d7e1d08be9f26a3b9741d48abb18cbb14c67929066f059a034e3327877ae56e1aff8bbfef09551f809abf656dc9abd20e273aaeda85232a14129d38287e07151d25f31c778ab5b3657d59c19f150e61876a41b915cbdbca11daf37d8c7bf8f354dca303a98c9a4916503e4dee85362bf61b57bda11b806f240800000080000000000000004ffaff4781a89ece9ba6866cdb8a310b5f418cf8a8ae06c76ffe55b47f59a918d205e885c8d78fc110bc066ae84f3e632a0139d4d6facbffe5a8b6091718aa21f440b75a0a5ff596bbe7efb8f3a8767a051b58059d5414226318fd5f0eed5903c77ff3e2665ef1bb36fc61d11e27a5cac401cd61ecbef354c3abf5037b7f232a090000000001000000000000660e10145ad96f4e9e049664fa3fde9677df302a8f3be6f7d230fd9c846cf4292481e35acf32d5959817e9a4c04403f109270aa36728ea969c31dae19c3d36238d5b74b2ae86124c36821344a0dcc50bb843a81a110beb0c2940bad25fd1fc1679e442b8be0aedc8f8fedbd34145adf4b6d3e1cab91d88c5bc2fa1e969e1d71060420f30f57545215671888d8074e7ef8f192f16b3d344b91f6e3fd83532a4094f386432eb27added390f1e6f907b60056095a1a811cd7a70c5ca1645cbe0b212c0d4f04c7a4ec14a9c7b5c9a4e7a2112960d19936c247d9d15a043dbf3b4006c4122e1f0abd347f1eef092a891febbd5d8ed785777933b75dea34f3ce8416180a000000e201000000000000c593936fa72c57811543a377249ccf8e930f3b74036772a935b5ef5164416c22098a5b38d0915cbf31ec277e212136e3318b49bf16fe23bf5e57df9a138084c601000000a36f7a3fcaa31639fa1de4e9340a728b606ea769b89403399127030df1a036216267c0c710c65477c42f56e98f68002f795bf7cb3c30bfee7f81049dc7d9581ac28c81432d0b083576971fce01f4c40ae5ee7acd9a1c53bdcf980b6b4badfc2a98d525f54bc4803ce585b9266a62783f6ab5fd0562b38ad05ca8e00338f44e030a7c623370149f5bc0689c8ad5e6a0dd2006899f2dfaea834f4fb906d0bb2908f17bb7e0a34b0edfba1e5188c70f11c8f2308b1fca2501c8946d672d850fbf17b423e1daba119931cb528e298790b1c46546b760c6293ff5cbffbc33224e1b029582ba3426a0e01eb7abc4fbdb459bf10b5ae51d111d07f83810e63db429190b283f4c8319bad425baf564ca236a5674c602e0577ac87ef9c2e6a9af6448c40771ef2e39619ee39cb62860541031e1dc9d01fd88ff877504751ce6c4a2490e063b4ceaac015e155eafabdaef755fc8223f8c0dbc839a57736233c4cc89d83f763ff1751cfab0f43a03d4cce60f34456261664a4cae5f45a8c725e2e9b8841e4b0000000016000000011431737420436f6e7472696275746f72204e616d65"));
        let mut r1cs_bytes =  Cursor::new(hex!("7231637301000000030000000200000078000000000000000100000002000000000000f093f5e1439170b97948e833285d588181b64550b829a031e1724e6430010000000300000001000000000000000000000000000000000000000000000000000000000000000100000001000000000000f093f5e1439170b97948e833285d588181b64550b829a031e1724e643001000000400000000000000020000000010000f093f5e1439170b97948e833285d588181b64550b829a031e1724e6430040000000100000000000000020000000400000000000000010000000300000020000000000000000000000000000000010000000000000002000000000000000300000000000000"));
        let witness = Witness::<ark_bn254::Fr>::from_reader(&mut witness_bytes).unwrap();
        let (pk, _) = ZKey::<Bn254>::from_reader(&mut zkey_bytes).unwrap().split();
        let r1cs = R1CS::<Bn254>::from_reader(&mut r1cs_bytes).unwrap();
        let circuit = Circuit::new(r1cs, witness);
        let public_inputs = circuit.public_inputs();
        let mut rng = thread_rng();
        let r = <Bn254 as Pairing>::ScalarField::rand(&mut rng);
        let s = <Bn254 as Pairing>::ScalarField::rand(&mut rng);
        let proof = Groth16::<Bn254>::create_proof_with_reduction(circuit, &pk, r, s)
            .expect("proof generation works");
        let pvk = prepare_verifying_key(&pk.vk);
        let ser_proof = serde_json::to_string(&JsonProof::<Bn254>::from(proof)).unwrap();
        let der_proof = serde_json::from_str::<JsonProof<Bn254>>(&ser_proof).unwrap();
        Groth16::<Bn254>::verify_proof(&pvk, &der_proof.into(), &public_inputs)
            .expect("can verify");
    }

    #[test]
    fn verify_circom_proof() {
        let mut zkey_bytes = Cursor::new(hex!(""));
        let mut witness_bytes = Cursor::new(hex!("77746e7302000000020000000100000028000000000000002000000001000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73040000000200000080000000000000000100000000000000000000000000000000000000000000000000000000000000210000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000b00000000000000000000000000000000000000000000000000000000000000"));
        let mut r1cs_bytes = Cursor::new(hex!("723163730100000003000000020000007800000000000000010000000200000000000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed7301000000030000000100000000000000000000000000000000000000000000000000000000000000010000000100000000000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed730100000040000000000000002000000001000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73040000000100000000000000020000000400000000000000010000000300000020000000000000000000000000000000010000000000000002000000000000000300000000000000"));
        let proof_bytes = hex!("7b0a202270695f61223a205b0a20202233313631393038393739363739393236373735313238363830393434363739303731353338373435363638303032373539303334363436313331353333313336333533303634393534303035323037323534333138363638363434343536323834313733343639383035393638373630323734222c0a202022393433353332353933383236323532353939373337383037323030323439343736353333333539393237393731343930353338393631383538313439313233323032303831343031383731353430373037313036363536303436313330393538333338363233393435363633363236313836222c0a20202231220a205d2c0a202270695f62223a205b0a20205b0a202020223835373432353439333435383839383933333434333331383432393934363430373934313132303734353834353136333139373533383135303035313035393031393433333730363839303330313638383331393134353438313038353731363335353735303339393234343737343136222c0a2020202232303633333039373134313337363734363730303036393339343839373837373735383634323539393931363735323837333837333937313839373231333335343436333833363430373732363338383436323935383930333636363831383137333639393630383936313931383035323335220a20205d2c0a20205b0a2020202233303533313438303034353539333530373637393433303532313336353530313431383837323033393934363031373239373534353436343235373234323039373933373933353339393238363839353138393833313438343536343530353536323132383034353534393939333538353131222c0a2020202231353831363236333834393638353739393336383933373433363238343331313131373533353831333639323637353831333833373538313231303732383438333336303033383532313233333134363536393734313032363535303336393931383331343638363635393631343339353432220a20205d2c0a20205b0a2020202231222c0a2020202230220a20205d0a205d2c0a202270695f63223a205b0a20202232383131333035333435323935373831383137333438353239363931353232313234333932393730303039303234383439393533343336353933383838363937303630303638373939363430343739333934303837323136393734393030363734383835363831313137333933313833383237222c0a202022333937383732313131353039323233323431343530323938303832313231353438313939393731343533333537313832373832333938393935383536313432313835313135373639323937353536323038393536353732303830353938343938373736393533393639373838333633323531222c0a20202231220a205d2c0a202270726f746f636f6c223a202267726f74683136222c0a20226375727665223a2022626c733132333831220a7d");
        let proof_string = String::from_utf8(proof_bytes.to_vec()).unwrap();
        let proof = serde_json::from_str::<JsonProof<Bls12_381>>(&proof_string).unwrap();
        let witness = Witness::<ark_bls12_381::Fr>::from_reader(&mut witness_bytes).unwrap();
        let (pk, _) = ZKey::<Bls12_381>::from_reader(&mut zkey_bytes)
            .unwrap()
            .split();
        let r1cs = R1CS::<Bls12_381>::from_reader(&mut r1cs_bytes).unwrap();
        let circuit = Circuit::new(r1cs, witness);
        let public_inputs = circuit.public_inputs();
        let pvk = prepare_verifying_key(&pk.vk);
        Groth16::<Bls12_381>::verify_proof(&pvk, &proof.into(), &public_inputs)
            .expect("can verify");
    }

    #[test]
    fn proof_circom_proof() {
        let mut zkey_bytes = Cursor::new(hex!("7a6b6579010000000a0000000100000004000000000000000100000002000000c40300000000000030000000abaafffffffffeb9ffff53b1feffab1e24f6b0f6a0d23067bf1285f3844b7764d7ac4b43b6a71b4b9ae67f39ea11011a2000000001000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73040000000100000004000000bae69d85d5d44ad98028705282336c5f39027e2164e05aecb110813687e605a1f72b4f8557212c9e799af41c122a430d2a405876f2446812415bda9f3d45488b1b383e9d41c4178c83d7edf51123fde7e8bcc51eef870ef6c80a3177786d1d081364cc3e38594cbfb38bbe8f09e13c9d38ae026fe6817631cf9497fd5056f8f456a90986b3726ab4aac6bbbe839c93165daf23b9cec770230efa2f08dd378426f1cf9c257e9d0a9e34cfd426cac83b9a840fa7fbf0798cad142f1935aec7ee004d7a7f3385cf787c327667d1a8d8f56c923343cff9731adb17171a505011fc04169c4d921299bc35e77ebf765c47760bc056e187e5ca68d9dbe827f6729361443b76cba9e2b9c95cf6454efd36092793670a8978ded85bff587d61952987a407564cb4f8e9e1a37940c92a8910791b017410fc40e98b76a442d5ca183404ac10310c5233d1653a1c1ad681c9e0fac6184c212cfcecc35a75f6db1d50d790793eae6ef778c97663bf22e0fbb151cdd2e45cda65d66759218ddb17d83d4898b410100a9402a28ff2f51a96b48726fbf5b380e52a3eb593a8a1e9ae3c1a9d9994986b36631863b7676fd7bc50439291810506f6239e75c0a9a5c360cdbc9dc5a0aa067886e2187eb13b67b34185ccb61a1b478515f20eedb6c2f3ed6073092a92114a4c4960f80a734c5a9c365e1ffa7c595a630aaa6c85e6e75f490d6ee9b5efbba225eff075a9d307e5da807e8efd83005db064df92fcc0addc61142b0a27aa18a0ebe43b6aacad863aa33dc94e5c4979edca3ca4505817e7f21bde63a1c22b0b76e122e4208693a9faed59618108f55c711890732690d3db1de2d08aa9bc903536e7e318adde717a111d7944f2446b022cdd2d54df6d40fbf95a17ae671ac13960b65fb76772887c7f267329ea421aeb27072293939a0be70d1c5d1e502d16148c6e5827e426541c327f9dacdc90b01a4702cd2c6fe3944bee699dd1be28b892691d0dd98c65c8a6da83bb66c0ab01004eb3323d1abac23c44ff2c4b69e43c9efede80583b2fb654e2a8e914d05548ea54af50fc0c89ff0728f7885d01cad910a813c7176a85d29da0db6bc429d898d675570c6a270f7907c713c84657b6b289bbaadd16e681aabdfa919ba3c7287606a8df8d4730582f0cbabdd88358d5d99e509b75b93394eec4ac514eafee28ef463dfd4fdefe48b3f314a8cb5e56a2cd0f03000000c000000000000000d15848d8895f8457975173f332f54801bf4f89c352762c1b6661c4af1deb59443254fc9ab077c325ee1d8245fc3da904d389099ddfb68b19ee03c3db1fd557311608a8204d51f005a0e2e9bfb8c853ada0679c5139703f0a99dcc77c7e41500f04ef4dd6e88625f3a975fd8ad5916e3a3cf1a1e3c34659127485d735f21391e90db62c0b34509552165a1ff35ddba00c7f447eaf16fa36814335460fcf6e46b30ed76b3ebedd341abb68263002465706b10587ee9ffacab86185d067a62ce71404000000b4000000000000000400000000000000000000000200000094630d0c6e166636dbff6b7837b65028769e4d9771c3662d377e438a79cda46c0100000000000000030000006d9cf2f390e999c9235c9287cbed6c2b8f3954729614d30511ff599fd9d948070000000001000000000000006d9cf2f390e999c9235c9287cbed6c2b8f3954729614d30511ff599fd9d948070000000002000000010000006d9cf2f390e999c9235c9287cbed6c2b8f3954729614d30511ff599fd9d9480705000000800100000000000050de3cd3b0de03aee4e75c1b0ea31bbdda5eeec708e0618cd9f5312fa9a206261e0452b00b0502d62513401b740fda06c0030a50511ca830b59d28233479c7eefb05e78410834bd5c006da855e1ee6b1a24dca441972ac5ffe6ae77f78905f122b55bab812ec9bf56ac2e112b6a88be6f1bc07026034278758ba59b84c4b9ed711dded06ec68d3b51bc6e8aef13f3310a4599951e001917efef6c10c01749e48c74763cdac3c633747fbdb03e63979a47671599ee7c44d63f2f46e9cddaf420f2fb56df73031ab0d9e618c3113af260e97627857497d2a0897215617dfde1aa644c3078c77a416c94f671d261088f70b25b1271d56f887e0f0e2b566147e9ec4f216d9163fe5c5413ca3feecea689d7ffb9bee1d7695df4a1a0eae626247ab0afb56df73031ab0d9e618c3113af260e97627857497d2a0897215617dfde1aa644c3078c77a416c94f671d261088f70b86f9d7e2a90777d90e1d9e4aea810d5a31dfd7df61ed6a25836f86069ae2d9e4db105d2540123c0080d8d1d687ca550f0700000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009a41857bfface9f8d62dfa5c07ee2c48adf6c33a8b0db0adedbe1522728d87ee0a67f85ce9b88d603254bea473757d07114c22a35a2bbbdaf27d10ab3a8260e0f8f068a9a6a9c3bd3ca67050874089040397db9fb103ebbf531a4da0cb6d5103fe067e5b41b10fa7b59cc7709bf96c48f6db904d24636565e120d27c8b0803409087daa44c438a955c35ffefdc2a9c10acd583f13905f5d352a96c1ef38bfab8b11bb69647cab3eb3a5492e93427f13b4afc2996ed036285a1d9c0015122b50208000000c000000000000000951c661a9c5acaa4feae618b7c668908eed9135ef4b0a0c89621263de048caf595cf6d260fceed3983d3f0466cafd808f3a2d1f07f8595dd448cec20177ffbcdc0c58cfbe99eb56f7422b5ad11a4e4bd321aa2878eb097b76d8eb5e72a8e3d07a5df6b3e5f77ae1041323738f80038f1fad3efddff9ebb9de1cf1735cf30f6c1f74cf4cbd5355b66506bc63066cdd90bffc63f0fe637596c1710b62c10b78e4b322f4e1186c3d93d7fe4a390617b78f86168896bacd81a2e8d8062ed282d8d06090000008001000000000000184915c744e3ee7d39a0fc9bd9f9e4b7f3c07a3ea655d42700e1db7344ee4f9110fa3b33e0941ea15fb8a395b270f30f5a2d27626fcde62d35dcd3e9ebc296d50bee74f619c60c1b327516d19eb44466e71862cf6f17d307d907bca8952aaa11aee404fd4292c0c2797869363d17119115e7051b46a8901777ba43c41c24eddea3916747c81814eada0581e05774f90922ed9d0dca5846c687ede3b5560e18dc7e90419440fda72dc281e7d2ac169126f695742b95aca85c2f969917955234062b0add5e13042dc31451909616ffe0dd16c709a62e2eb085b7535daff7da33827243cf8abeeaaed9fb511675f5eb7d159c61e14710e4bc9d7727c7e811bda82d2851574eb0831802a1c3de93ba8aa31852de824cab2dce30bb05aff02c57d90e18058a21fe8fb9625da5b9ae59effa1d57b4c7a5487a0426d160a2b0f2d4ec08a37926ce3bfe693e329279d6bcee00036eed297a55039e3559693eb81d698cb4e889d8006c9ad3b9ec978cea1ce653ce271917fe79154e060be4a8fb2be3560f0a0000008202000000000000763a9cce0ca1f2628328dbab2a2261726801971301d3c05785199511807d58912707ca92d6c4b6b8761e769bc5e93bf72a63dd0af6a7b80d18c94de44a6586e10100000076e122e4208693a9faed59618108f55c711890732690d3db1de2d08aa9bc903536e7e318adde717a111d7944f2446b022cdd2d54df6d40fbf95a17ae671ac13960b65fb76772887c7f267329ea421aeb27072293939a0be70d1c5d1e502d161473d32c57cdb06747d05cc4c4156c4bb3a6a0c57ca0b5e358745a036f9bf2abb904b3e3b5d9afaaabcfb519d838882e02e15ec44275b96114308f22c9b92feb74485679a055c395b95a7b5d176041f27363bb3af97784b28e0f16a1de2a99a908c83a2d5c287a3f340ae9ee6e34dfd3266b64d4ee44d1921e52b4b49ace61d7f5a899d79734a46de616682f27cbd7181128efee760050fa5d296c9f97fc423b1795d733407f48a6afa6ef528e09b535d615727d12a3b317012722598617632c0f0f217abaf01c6ba4062170298f912dd38618c5ac2faf4eb3695e668e2fdc17d8bf7b5273cc61ae19b39583f32733ed0a66911c3cce56ea929509d030ee950afdd52080271f339f96a6c510c983b84a4eecd3f3c4e453d74bbe6843a973749605da788172615f7b60c0955281f6b4393048e7f9f18eb270a853c20370813c427a81e028014be65fbd0d608a7d24bea10bbea5ab241b000ef94b33f6a658e525f53c3642cfa5bf152a9f19a754f2227a448ec866caa4e8a5c86a61026030b52017e4961ec28870f158d05375ffd1bb8b6cd44c33db2db6ed366fe858040813e159830476f0a979197eae0342c84925bfe3699e1ba4f20044622184a0bdb640aaad0000000016000000011431737420436f6e7472696275746f72204e616d65"));
        let mut witness_bytes = Cursor::new(hex!("77746e7302000000020000000100000028000000000000002000000001000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73040000000200000080000000000000000100000000000000000000000000000000000000000000000000000000000000210000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000b00000000000000000000000000000000000000000000000000000000000000"));
        let mut r1cs_bytes = Cursor::new(hex!("723163730100000003000000020000007800000000000000010000000200000000000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed7301000000030000000100000000000000000000000000000000000000000000000000000000000000010000000100000000000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed730100000040000000000000002000000001000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73040000000100000000000000020000000400000000000000010000000300000020000000000000000000000000000000010000000000000002000000000000000300000000000000"));
        let witness = Witness::<ark_bls12_381::Fr>::from_reader(&mut witness_bytes).unwrap();
        let (pk, _) = ZKey::<Bls12_381>::from_reader(&mut zkey_bytes)
            .unwrap()
            .split();
        let r1cs = R1CS::<Bls12_381>::from_reader(&mut r1cs_bytes).unwrap();
        let circuit = Circuit::new(r1cs, witness);
        let public_inputs = circuit.public_inputs();
        let mut rng = thread_rng();
        let r = <Bls12_381 as Pairing>::ScalarField::rand(&mut rng);
        let s = <Bls12_381 as Pairing>::ScalarField::rand(&mut rng);
        let proof =
            Groth16::<Bls12_381, CircomReduction>::create_proof_with_reduction(circuit, &pk, r, s)
                .expect("proof generation works");
        let pvk = prepare_verifying_key(&pk.vk);
        Groth16::<Bls12_381>::verify_proof(&pvk, &proof, &public_inputs).expect("can verify");
        let test = serde_json::to_string(&JsonProof::<Bls12_381>::from(proof)).unwrap();
        fs::write(Path::new("my_cool_proof.json"), test).unwrap();
    }
}
